// <auto-generated />
using IStitch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IStitch.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240830022720_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IStitch.Models.Service", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Name");

                    b.HasIndex("Category");

                    b.ToTable("Service");

                    b.HasAnnotation("Relational:JsonPropertyName", "ServicesType");
                });

            modelBuilder.Entity("IStitch.Models.ServiceType", b =>
                {
                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "Category");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Category");

                    b.ToTable("ServiceType");
                });

            modelBuilder.Entity("IStitch.Models.Service", b =>
                {
                    b.HasOne("IStitch.Models.ServiceType", null)
                        .WithMany("ServicesList")
                        .HasForeignKey("Category")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IStitch.Models.ServiceType", b =>
                {
                    b.Navigation("ServicesList");
                });
#pragma warning restore 612, 618
        }
    }
}
